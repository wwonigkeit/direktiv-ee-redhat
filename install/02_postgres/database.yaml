apiVersion: pgv2.percona.com/v2
kind: PerconaPGCluster
metadata:
  name: direktiv-cluster
  namespace: postgres
spec:
  crVersion: 2.4.1

  users:
    - name: direktiv
      databases:
        - direktiv
      # access to public schema
      # if no superuser is required, grant privileges manually: GRANT ALL ON SCHEMA public TO direktiv;
      options: "SUPERUSER"
    - name: keycloak
      databases:
        - keycloak
      # access to public schema
      # if no superuser is required, grant privileges manually: GRANT ALL ON SCHEMA public TO direktiv;
      options: "SUPERUSER"
    - name: postgres
      

  image: perconalab/percona-postgresql-operator:2.4.1-ppg16-postgres
  imagePullPolicy: Always
  postgresVersion: 16
  port: 5432

  instances:
  - name: instance1
    replicas: 1
    resources:
      limits:
        cpu: 1.0
        memory: 2Gi
    dataVolumeClaimSpec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 4Gi
    topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: DoNotSchedule
      labelSelector:
        matchLabels:
          postgres-operator.crunchydata.com/instance-set: instance1

  proxy:
    pgBouncer:
      replicas: 2
      image: perconalab/percona-postgresql-operator:2.4.1-ppg16-pgbouncer
      affinity:
       podAntiAffinity:
         preferredDuringSchedulingIgnoredDuringExecution:
         - weight: 1
           podAffinityTerm:
             labelSelector:
               matchLabels:
                 postgres-operator.crunchydata.com/cluster: keycloakdb
                 postgres-operator.crunchydata.com/role: pgbouncer
             topologyKey: kubernetes.io/hostname

  backups:
    pgbackrest:
      image: perconalab/percona-postgresql-operator:2.4.1-ppg16-pgbackrest
      global:
        repo1-retention-full: "2"
        repo1-retention-full-type: count
      manual:
        repoName: repo1
        options:
         - --type=full
      repos:
      - name: repo1
        schedules:
          full: "0 0 * * *"
          differential: "0 6,12,18 * * *"
        volume:
          volumeClaimSpec:
            accessModes:
            - ReadWriteOnce
            resources:
              requests:
                storage: 4Gi
  pmm:
    enabled: false
    image: percona/pmm-client:2.41.0
    secret: ""
    serverHost: ""
